package com.google.zxing.pdf417.encoder;

import com.autonavi.ae.gmap.utils.GLMapStaticValue;
import com.google.zxing.WriterException;
import com.google.zxing.pdf417.PDF417Common;
import com.ifengyu.im.protobuf.IMBaseDefine.MessageCmdID;
import com.mi.milinkforgame.sdk.data.Error;
import okhttp3.internal.http.StatusLine;
import org.apache.http.HttpStatus;
import org.bouncycastle.crypto.tls.CipherSuite;
import org.bouncycastle.math.Primes;

final class PDF417ErrorCorrection {
    private static final int[][] EC_COEFFICIENTS = {new int[]{27, 917}, new int[]{522, Error.MNS_OPEN_SESSION_FAILED_WIFI_REDIRECT_IN_BACKGROUND, 723, 809}, new int[]{237, StatusLine.HTTP_PERM_REDIRECT, 436, 284, 646, 653, 428, 379}, new int[]{274, Error.MNS_LOAD_LIBS_FAILED, 232, 755, 599, 524, 801, 132, 295, Error.E_REG_WRONG_TOKEN, 442, 428, 295, 42, CipherSuite.TLS_PSK_WITH_NULL_SHA256, 65}, new int[]{361, 575, 922, 525, CipherSuite.TLS_PSK_WITH_NULL_SHA256, 586, 640, 321, Error.ILLEGALARGUMENT_EXCEPTION_ERROR, 742, 677, 742, 687, 284, CipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256, 517, 273, 494, 263, CipherSuite.TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA, 593, GLMapStaticValue.ANIMATION_FLUENT_TIME, Error.MNS_SCORE_IP_SUCCESS, 320, 803, 133, 231, 390, 685, 330, 63, HttpStatus.SC_GONE}, new int[]{Error.MNS_BUSI_BUFFER_NONE, HttpStatus.SC_UNPROCESSABLE_ENTITY, 6, 93, 862, MessageCmdID.CID_MSG_READ_ACK_VALUE, 453, 106, 610, 287, 107, HttpStatus.SC_HTTP_VERSION_NOT_SUPPORTED, 733, 877, 381, 612, 723, 476, 462, CipherSuite.TLS_RSA_PSK_WITH_AES_128_GCM_SHA256, 430, 609, 858, 822, Error.MNS_RECENTLY_IP_SESSION, 376, Error.E_WTSDK_IS_BUSY, 400, 672, 762, 283, CipherSuite.TLS_RSA_PSK_WITH_NULL_SHA256, 440, 35, 519, 31, 460, 594, 225, Error.IO_EXCEPTION_ERROR, 517, 352, 605, CipherSuite.TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, 651, HttpStatus.SC_CREATED, 488, HttpStatus.SC_BAD_GATEWAY, 648, 733, 717, 83, HttpStatus.SC_NOT_FOUND, 97, 280, MessageCmdID.CID_MSG_READ_ACK_VALUE, 840, 629, 4, 381, 843, 623, 264, Error.MNS_RECENTLY_IP_SESSION}, new int[]{521, 310, 864, Error.MNS_HEART_BEAT_PUSH, 858, Error.MNS_NEED_WIFI_AUTH, 296, 379, 53, MessageCmdID.CID_MSG_GET_LATEST_MSG_ID_REQ_VALUE, 897, 444, 400, 925, 749, HttpStatus.SC_UNSUPPORTED_MEDIA_TYPE, 822, 93, 217, 208, PDF417Common.MAX_CODEWORDS_IN_BARCODE, 244, 583, 620, 246, CipherSuite.TLS_RSA_PSK_WITH_AES_128_CBC_SHA, 447, 631, 292, 908, 490, 704, 516, 258, 457, 907, 594, 723, 674, 292, Error.E_WTSDK_A1_INVALID, 96, 684, 432, 686, 606, 860, Error.MNS_OPEN_SESSION_FAILED_WIFI_REDIRECT_IN_POWERSAVING, CipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256, 219, 129, CipherSuite.TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256, 236, 287, 192, MessageCmdID.CID_MSG_UNREAD_CNT_REQUEST_VALUE, Error.E_WTSDK_OPENDB_FAIL, CipherSuite.TLS_RSA_PSK_WITH_AES_256_GCM_SHA384, 40, 379, 712, 463, 646, MessageCmdID.CID_MSG_UNREAD_CNT_RESPONSE_VALUE, CipherSuite.TLS_DHE_PSK_WITH_AES_256_GCM_SHA384, 491, 297, 763, CipherSuite.TLS_RSA_WITH_AES_128_GCM_SHA256, 732, 95, Error.E_WTSDK_A1_DECRYPT, 447, 90, HttpStatus.SC_INSUFFICIENT_STORAGE, 48, 228, 821, 808, 898, 784, 663, 627, 378, 382, 262, 380, 602, 754, 336, 89, 614, 87, 432, 670, 616, CipherSuite.TLS_RSA_WITH_AES_256_GCM_SHA384, 374, 242, 726, 600, 269, 375, 898, 845, 454, 354, 130, 814, 587, 804, 34, Primes.SMALL_FACTOR_LIMIT, 330, Error.MNS_BUSI_BUFFER_NONE, 297, 827, 865, 37, 517, 834, 315, Error.MNS_DIAGNOSIS_INSTALLED_FIREWALL, 86, 801, 4, 108, Error.MNS_BUSI_BUFFER_NONE}, new int[]{524, 894, 75, 766, 882, 857, 74, HttpStatus.SC_NO_CONTENT, 82, 586, 708, 250, 905, 786, 138, 720, 858, CipherSuite.TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256, 311, 913, 275, CipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256, 375, 850, 438, 733, CipherSuite.TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256, 280, HttpStatus.SC_CREATED, 280, 828, 757, 710, 814, 919, 89, 68, Error.MNS_OPEN_SESSION_FAILED_WIFI_REDIRECT_IN_POWERSAVING, 11, HttpStatus.SC_NO_CONTENT, 796, 605, Error.MNS_LOGGINGIN_SAMEUIN, 913, 801, 700, 799, 137, 439, 418, 592, 668, 353, 859, 370, 694, 325, 240, 216, 257, 284, Error.MNS_DIAGNOSIS_NEED_AUTHENTIED, 209, 884, 315, 70, 329, 793, 490, 274, 877, 162, 749, 812, 684, 461, 334, 376, 849, 521, 307, 291, 803, 712, 19, 358, 399, 908, 103, Error.E_WTSDK_IS_BUSY, 51, 8, 517, 225, 289, 470, 637, 731, 66, 255, 917, 269, 463, 830, 730, 433, 848, 585, 136, Error.ACCOUNT_IS_NULL, 906, 90, 2, 290, 743, 199, 655, 903, 329, 49, 802, Error.MNS_NEED_WIFI_AUTH, 355, 588, 188, 462, 10, 134, 628, 320, 479, 130, 739, 71, 263, 318, 374, 601, 192, 605, CipherSuite.TLS_DHE_PSK_WITH_RC4_128_SHA, 673, 687, 234, 722, 384, CipherSuite.TLS_PSK_WITH_NULL_SHA384, 752, 607, 640, 455, CipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256, 689, 707, 805, 641, 48, 60, 732, 621, 895, 544, 261, 852, 655, 309, 697, 755, 756, 60, 231, MessageCmdID.CID_MSG_TIME_REQUEST_VALUE, 434, 421, 726, 528, HttpStatus.SC_SERVICE_UNAVAILABLE, 118, 49, 795, 32, CipherSuite.TLS_DHE_PSK_WITH_AES_128_CBC_SHA, 500, 238, 836, 394, 280, Error.MNS_OPEN_SESSION_FAILED_PIC_FAILED_IN_POWERSAVING, 319, 9, 647, Error.MNS_DIAGNOSIS_INSTALLED_FIREWALL, 73, 914, 342, 126, 32, 681, 331, 792, 620, 60, 609, 441, CipherSuite.TLS_DHE_PSK_WITH_NULL_SHA256, 791, 893, 754, 605, 383, 228, 749, 760, 213, 54, 297, 134, 54, 834, 299, 922, CipherSuite.TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256, 910, Error.SEND_DONE_BUT_NETWORK_BROKEN, 609, 829, CipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256, 20, CipherSuite.TLS_DH_anon_WITH_AES_256_GCM_SHA384, 29, 872, 449, 83, HttpStatus.SC_PAYMENT_REQUIRED, 41, 656, HttpStatus.SC_HTTP_VERSION_NOT_SUPPORTED, 579, 481, CipherSuite.TLS_RSA_PSK_WITH_AES_256_GCM_SHA384, HttpStatus.SC_NOT_FOUND, 251, 688, 95, 497, Error.TLV_DECOMPRESS_FAIL, 642, Error.MNS_RECENTLY_IP_SESSION, 307, CipherSuite.TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, 924, Error.IP_ADDRESS_NOT_VALID, 648, 55, 497, 10}, new int[]{352, 77, 373, HttpStatus.SC_GATEWAY_TIMEOUT, 35, 599, 428, HttpStatus.SC_MULTI_STATUS, HttpStatus.SC_CONFLICT, 574, 118, 498, 285, 380, 350, 492, CipherSuite.TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256, 265, 920, CipherSuite.TLS_DH_anon_WITH_SEED_CBC_SHA, 914, 299, 229, 643, 294, 871, 306, 88, 87, CipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256, 352, MessageCmdID.CID_MSG_GET_BY_MSG_ID_REQ_VALUE, 846, 75, 327, 520, 435, Error.MNS_RECENTLY_IP_SESSION, HttpStatus.SC_NON_AUTHORITATIVE_INFORMATION, 666, 249, 346, MessageCmdID.CID_MSG_GET_BY_MSG_ID_REQ_VALUE, 621, 640, 268, 794, Error.CONNECT_EXCEPTION_ERROR, Error.MNS_BUSI_BUFFER_NONE, MessageCmdID.CID_MSG_GET_BY_MSG_ID_REQ_VALUE, HttpStatus.SC_REQUEST_TIMEOUT, 390, 644, 102, 476, 499, 290, 632, 545, 37, 858, 916, Error.CHECK_SESSION_NEW_SUCCESS, 41, Error.MNS_REDIRECT_IP_SESSION, 289, 122, Error.E_WTSDK_A1_INVALID, 383, GLMapStaticValue.ANIMATION_FLUENT_TIME, 485, 98, 752, 472, 761, 107, 784, 860, 658, 741, 290, HttpStatus.SC_NO_CONTENT, 681, HttpStatus.SC_PROXY_AUTHENTICATION_REQUIRED, 855, 85, 99, 62, 482, CipherSuite.TLS_DHE_PSK_WITH_NULL_SHA256, 20, 297, 451, 593, 913, CipherSuite.TLS_DHE_PSK_WITH_RC4_128_SHA, 808, 684, 287, Error.ILLEGALARGUMENT_EXCEPTION_ERROR, Error.MNS_OPEN_SESSION_FAILED_PIC_SUC_IN_POWERSAVING, 76, 653, 899, 729, Error.MNS_OPEN_SESSION_FAILED_WIFI_REDIRECT_IN_FOREGROUND, 744, 390, 513, 192, 516, 258, 240, 518, 794, 395, 768, 848, 51, 610, 384, CipherSuite.TLS_PSK_WITH_AES_128_GCM_SHA256, CipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256, 826, 328, 596, 786, HttpStatus.SC_SEE_OTHER, Error.MNS_OPEN_SESSION_FAILED_IN_NETWORK_DISABLED, 381, HttpStatus.SC_UNSUPPORTED_MEDIA_TYPE, 641, CipherSuite.TLS_RSA_WITH_AES_128_GCM_SHA256, 237, CipherSuite.TLS_DH_DSS_WITH_SEED_CBC_SHA, 429, Error.MNS_CANNOTSEND_INBG, HttpStatus.SC_MULTI_STATUS, 676, 710, 89, CipherSuite.TLS_PSK_WITH_AES_128_GCM_SHA256, HttpStatus.SC_NOT_MODIFIED, HttpStatus.SC_PAYMENT_REQUIRED, 40, 708, 575, 162, 864, 229, 65, 861, 841, 512, CipherSuite.TLS_DH_DSS_WITH_AES_128_GCM_SHA256, 477, 221, 92, 358, 785, 288, 357, 850, 836, 827, 736, 707, 94, 8, 494, 114, 521, 2, 499, 851, Error.MNS_RECENTLY_IP_SESSION, CipherSuite.TLS_DH_RSA_WITH_SEED_CBC_SHA, 729, MessageCmdID.CID_MSG_READ_ACK_VALUE, 95, 248, 361, 578, 323, 856, 797, 289, 51, 684, 466, Error.MNS_NOT_LOGIN, 820, 669, 45, 902, 452, CipherSuite.TLS_DH_anon_WITH_AES_256_GCM_SHA384, 342, 244, CipherSuite.TLS_RSA_PSK_WITH_AES_256_GCM_SHA384, 35, 463, 651, 51, 699, 591, 452, 578, 37, 124, 298, 332, Error.CHECK_SESSION_NEW_SUCCESS, 43, 427, 119, 662, MessageCmdID.CID_MSG_LIST_REQUEST_VALUE, 475, 850, 764, 364, 578, 911, 283, 711, 472, HttpStatus.SC_METHOD_FAILURE, 245, 288, 594, 394, Error.E_WTSDK_IS_BUSY, 327, 589, MessageCmdID.CID_MSG_LIST_REQUEST_VALUE, 699, 688, 43, HttpStatus.SC_REQUEST_TIMEOUT, 842, 383, 721, 521, Error.MNS_OPEN_SESSION_FAILED_PIC_SUC_IN_BACKGROUND, 644, 714, Error.MNS_OPEN_SESSION_FAILED_PIC_SUC_IN_FOREGROUND, 62, CipherSuite.TLS_DHE_PSK_WITH_AES_256_CBC_SHA, 873, 663, 713, CipherSuite.TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, 672, 729, 624, 59, CipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256, HttpStatus.SC_EXPECTATION_FAILED, CipherSuite.TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, 209, Error.NOT_SUPPORT_SHORT_COMMAND, Error.MNS_OPEN_SESSION_FAILED_PIC_FAILED_IN_FOREGROUND, 343, 693, 109, 608, Error.NOT_SUPPORT_SHORT_COMMAND, 365, CipherSuite.TLS_DHE_PSK_WITH_NULL_SHA384, MessageCmdID.CID_MSG_READ_NOTIFY_VALUE, 677, 310, 248, 353, 708, HttpStatus.SC_GONE, 579, 870, 617, 841, 632, 860, 289, Error.ILLEGALARGUMENT_EXCEPTION_ERROR, 35, MessageCmdID.CID_MSG_LIST_REQUEST_VALUE, 618, 586, HttpStatus.SC_FAILED_DEPENDENCY, 833, 77, 597, 346, 269, 757, 632, 695, 751, 331, 247, CipherSuite.TLS_RSA_PSK_WITH_NULL_SHA256, 45, 787, 680, 18, 66, HttpStatus.SC_PROXY_AUTHENTICATION_REQUIRED, 369, 54, 492, 228, 613, 830, 922, 437, 519, 644, 905, 789, HttpStatus.SC_METHOD_FAILURE, HttpStatus.SC_USE_PROXY, 441, HttpStatus.SC_MULTI_STATUS, 300, 892, 827, CipherSuite.TLS_PSK_WITH_AES_256_CBC_SHA, Error.DNS_ANALYZE_TIMEOUT, 381, 662, 513, 56, 252, 341, 242, 797, 838, 837, 720, 224, 307, 631, 61, 87, Error.MNS_OPEN_SESSION_FAILED_PIC_SUC_IN_BACKGROUND, 310, 756, 665, 397, 808, 851, 309, 473, 795, 378, 31, 647, 915, 459, 806, 590, 731, 425, 216, Error.MNS_HEART_BEAT_CONFIG, 249, 321, 881, 699, Error.IO_EXCEPTION_ERROR, 673, MessageCmdID.CID_MSG_GET_BY_MSG_ID_RES_VALUE, 210, 815, 905, HttpStatus.SC_SEE_OTHER, 843, 922, 281, 73, 469, 791, 660, 162, 498, StatusLine.HTTP_PERM_REDIRECT, CipherSuite.TLS_DH_anon_WITH_SEED_CBC_SHA, HttpStatus.SC_UNPROCESSABLE_ENTITY, 907, 817, CipherSuite.TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256, 62, 16, 425, Error.IO_EXCEPTION_ERROR, 336, 286, 437, 375, 273, 610, 296, CipherSuite.TLS_RSA_PSK_WITH_AES_256_CBC_SHA384, 923, Error.E_REG_WRONG_TOKEN, 667, 751, 353, 62, 366, 691, 379, 687, 842, 37, 357, 720, 742, 330, 5, 39, 923, 311, HttpStatus.SC_FAILED_DEPENDENCY, 242, 749, 321, 54, 669, 316, 342, 299, Error.CONNECT_EXCEPTION_ERROR, 105, 667, 488, 640, 672, 576, Error.MNS_LOGGINGIN_SAMEUIN, 316, 486, 721, 610, 46, 656, 447, CipherSuite.TLS_DHE_PSK_WITH_AES_256_GCM_SHA384, 616, 464, CipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256, Error.MNS_CANNOTSEND_INBG, 297, 321, 762, 752, Error.MNS_NOT_LOGIN, CipherSuite.TLS_PSK_WITH_AES_256_CBC_SHA384, 134, 14, 381, 433, 717, 45, 111, 20, 596, 284, 736, 138, 646, HttpStatus.SC_LENGTH_REQUIRED, 877, 669, CipherSuite.TLS_PSK_WITH_AES_256_CBC_SHA, 919, 45, MessageCmdID.CID_MSG_GET_LATEST_MSG_ID_RSP_VALUE, HttpStatus.SC_PROXY_AUTHENTICATION_REQUIRED, CipherSuite.TLS_DH_DSS_WITH_AES_128_GCM_SHA256, 332, 899, CipherSuite.TLS_DH_DSS_WITH_AES_256_GCM_SHA384, 726, 600, 325, 498, 655, 357, 752, 768, 223, 849, 647, 63, 310, 863, 251, 366, HttpStatus.SC_NOT_MODIFIED, 282, 738, 675, HttpStatus.SC_GONE, 389, 244, 31, 121, HttpStatus.SC_SEE_OTHER, 263}};

    private PDF417ErrorCorrection() {
    }

    static int getErrorCorrectionCodewordCount(int i) {
        if (i >= 0 && i <= 8) {
            return 1 << (i + 1);
        }
        throw new IllegalArgumentException("Error correction level must be between 0 and 8!");
    }

    static int getRecommendedMinimumErrorCorrectionLevel(int i) throws WriterException {
        if (i <= 0) {
            throw new IllegalArgumentException("n must be > 0");
        } else if (i <= 40) {
            return 2;
        } else {
            if (i <= 160) {
                return 3;
            }
            if (i <= 320) {
                return 4;
            }
            if (i <= 863) {
                return 5;
            }
            throw new WriterException("No recommendation possible");
        }
    }

    static String generateErrorCorrection(CharSequence charSequence, int i) {
        int errorCorrectionCodewordCount = getErrorCorrectionCodewordCount(i);
        char[] cArr = new char[errorCorrectionCodewordCount];
        int length = charSequence.length();
        for (int i2 = 0; i2 < length; i2++) {
            int charAt = (charSequence.charAt(i2) + cArr[errorCorrectionCodewordCount - 1]) % PDF417Common.NUMBER_OF_CODEWORDS;
            for (int i3 = errorCorrectionCodewordCount - 1; i3 > 0; i3--) {
                cArr[i3] = (char) (((929 - ((EC_COEFFICIENTS[i][i3] * charAt) % PDF417Common.NUMBER_OF_CODEWORDS)) + cArr[i3 - 1]) % PDF417Common.NUMBER_OF_CODEWORDS);
            }
            cArr[0] = (char) ((929 - ((EC_COEFFICIENTS[i][0] * charAt) % PDF417Common.NUMBER_OF_CODEWORDS)) % PDF417Common.NUMBER_OF_CODEWORDS);
        }
        StringBuilder sb = new StringBuilder(errorCorrectionCodewordCount);
        for (int i4 = errorCorrectionCodewordCount - 1; i4 >= 0; i4--) {
            if (cArr[i4] != 0) {
                cArr[i4] = (char) (929 - cArr[i4]);
            }
            sb.append(cArr[i4]);
        }
        return sb.toString();
    }
}
